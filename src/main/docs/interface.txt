
一、获取商品价格历史:
地址：115.29.109.85:8080/crawler/priceHistory.json
返回的格式如:
{
  "1": {
    "lowestPrice": 139.0,
    "prices": [
      {
        "date": "2014-08-24",
        "price": 169.0,
        "grabDate": "2015-01-13"
      },
      ...
      {
        "date": "2015-01-13",
        "price": 169.02,
        "grabDate": "2015-01-13"
      }
    ]
  },
  "2": {
    "lowestPrice": 680.0,
    "prices": [
      {
        "date": "2014-11-28",
        "price": 680.0,
        "grabDate": "2015-01-13"
      },
      ...
      {
        "date": "2015-01-12",
        "price": 680.0,
        "grabDate": "2015-01-13"
      }
    ]
  }
}
数据结构说明：
1) 键"1"、"2"表示商品的ID
2) lowestPrice表示最低价格
3) prices是一个数组，里面列出了若干天的商品价格
4) date和price分别对应了某一天的日期以及那一天的商品价格
5) grabDate表示爬虫抓取该价格记录的日期。

附加参数：
1) 如果在url中添加参数pretty，则返回格式化后的json，完整链接如：
115.29.109.85:8080/crawler/priceHistory.json?pretty=

2) priceHistory.json默认返回最近三个月（即90天）的价格信息，如果要获取指定时间段的价格信息，则增加startTime和endTime参数，时间的格式为yyyy-mm-dd，如：
115.29.109.85:8080/crawler/priceHistory.json?pretty=&startTime=2014-10-07&endTime=2014-12-11

3) 如果只想获取某一个商品的价格信息，而不是所有商品的价格信息，则增加commodityId参数，表示要查询的商品的ID，如：
115.29.109.85:8080/crawler/priceHistory.json?pretty=&commodityId=2

4) 如果只想获取某一天抓取的商品价格记录，可以设置grabDate参数，如：
115.29.109.85:8080/crawler/priceHistory.json?pretty=&grabDate=2015-01-13








二、获取商品信息：
地址：115.29.109.85:8080/crawler/commodity.json
返回的格式如：
{
  "1": {
    "name": "马克珍妮2014秋装宝宝迷彩夹克",
    "url": "http://s.etao.com/detail/40780735321.html",
    "pictures": ["ftp://115.29.109.85/crawler/pictures/439fe87193.png"],
    "onShelfTime": "2014-12-30",
    "onShelf": true
  },
  "2": {
    "name": "华为（Huawei）华为荣耀3C手机 四核5寸大屏800万像素安卓智能手机",
    "url": "http://s.etao.com/detail/5062049556999999218.html",
    "pictures": ["ftp://115.29.109.85/crawler/pictures/398fhdpah.png"],
    "onShelf": true
  }
}
数据结构说明：
1) 键"1"、"2"表示商品的ID
2) name表示商品的名称
3) url表示商品的地址
4) pictures表示商品的缩略图地址，可以有一个或多个，也可以没有（有可能因为特殊原因没抓到图片）
5) onShelfTime表示商品上架时间，对于某些商品，该键可能不存在（因为某些网站可能没有明确地显示出商品的上架时间）
6) onShelf表示商品是否还处于上架状态。如果商品没有下架，则返回true；如果商品已经下架，返回false

附加参数：
1) 如果只返回一种商品的详细信息，则增加id参数，例如:
115.29.109.85:8080/crawler/commodity.json?id=2
2) 只返回处于最近三个月中最低价的商品，则增加inLowPrice参数，例如：
115.29.109.85:8080/crawler/commodity.json?inLowPrice=true

其他说明：
爬虫在获取商品的图片地址时，只抓取一次，如果某个商品已经抓取过图片，则爬虫在接下来搜索商品图片时，会跳过该商品，以图片过多。








三、获取商品最高价：
地址：115.29.109.85:8080/crawler/commodityHighPrice.json
返回的格式如：
{
  "1": 100.0,
  "2": 500.0
}
数据结构说明：
1) 键"1"、"2"表示商品的ID，键的值是商品的最高价格

附加参数：
1) 如果只返回一种商品的最高价格信息，则增加id参数，例如:
115.29.109.85:8080/crawler/commodityHighPrice.json?id=2
2) 默认情况下，获取的是上架以来的最高价格。如果要查询指定时间区间内的最高价格，则增加startTime和endTime参数：
115.29.109.85:8080/crawler/commodityHighPrice.json?pretty=&startTime=2014-10-07&endTime=2014-12-11






四、获取商品最低价：
地址：115.29.109.85:8080/crawler/commodityLowPrice.json
返回的格式如：
{
  "1": 100.0,
  "2": 500.0
}
数据结构说明：
1) 键"1"、"2"表示商品的ID，键的值是商品的最低价格

附加参数：
1) 如果只返回一种商品的最低价格信息，则增加id参数，例如:
115.29.109.85:8080/crawler/commodityLowPrice.json?id=2
2) 默认情况下，获取的是最近90天的最低价格。如果要查询指定时间区间内的最低价格，则增加startTime和endTime参数：
115.29.109.85:8080/crawler/commodityLowPrice.json?pretty=&startTime=2014-10-07&endTime=2014-12-11






五、添加或更新商品的地址为：

1) 添加或更新单个商品：
地址：115.29.109.85:8080/crawler/addOrUpdateCommodity.json
访问该链接时，需要通过post方法提交参数，需要提交的参数包括：
name:           商品的的名称
url:            商品的url
price:          商品的原价，格式是浮点数
onShelfTime:    商品的上架时间（可选参数），格式如"2012-12-31"
id:             商品的ID（可选参数），假如将本参数设置为11，如果数据库已经存在Id为11的商品则更新ID为11的商品，如果数据库中未存在Id为11的商品则添加ID为11的商品
本链接会返回一个json，格式为：
{
    "success": true,
    "detail": null
}
success表示操作是否成功，detail表示详细信息，如果success为true，则detail为null，如果success为false，则detail为详细的错误信息。

2) 添加或更新多个商品：
地址：115.29.109.85:8080/crawler/addOrUpdateCommodities.json
访问该链接时，需要通过post方法提交参数，需要提交的参数是一个数组，里面分别列出需要添加或更新的商品，例如：
[{
    "name": "name1",
    "url": "http://s.etao.com/detail/5062049556999999218.html",
    "price": 12.3
}, {
    "name": "name2",
    "url": "http://s.etao.com/detail/5062049556992481.html",
    "price": 102.1,
    "onShelfTime": "2014-12-01",
    "id": 234789
}]








六、删除商品：

1) 删除单个商品：
地址：115.29.109.85:8080/crawler/deleteCommodity.json?id=2
访问该链接使用GET方法，需要一个id参数，表示需要删除的商品的id
该Url会返回一个JSON表示程序运行结果，格式是addOrUpdateCommodity.json一致

2) 删除多个商品：
地址：115.29.109.85:8080/crawler/deleteCommodities.json
访问该链接使用POST方法，需要一个ids参数，该参数是一个数组列出需要删除的商品的id，例如：[1, 2, 3, 4]






七、爬虫定期发送的数据
发送的url: 待定，可在发布根据实际情况配置
方法：POST
参数格式：
{
    "offShelfIds": [1, 2, ...],
    "onShelfIds": [111, 2321, ...],
    "OffShelfUrls": ["http://s.etao.com/detail/40780eioaa.html", "http://s.etao.com/detail/aap37189.html", ...],
    "onShelfUrls": ["http://s.etao.com/detail/32789170adfaf.html", "http://s.etao.com/detail/sie-1389gjdk.html", ...],
    "inLowIds": [11, 12, ...],
    "inLowUrls": ["http://s.etao.com/detail/dfio32781.html", "http://s.etao.com/detail/siadja-1389gjdk.html", ...],
}
参数说明：
offShelfId 表示已经失效的商品的ID（也就是爬虫抓不到的商品）
onShelfId 表示曾经失效，但后来又变成有效的商品的ID（可能会出现一些商品下架之后又上架，但可能不多）
offShelfUrls 表示已经失效的商品的url
onShelfUrls  表示曾经失效，但后来又变成有效的商品的url
inLowIds 表示处于最近3个月最低价格的商品的ID
inLowUrls 表示处于最近3个月最低价格的商品的url

补充说明：
爬虫同时发送商品的ID和URL，网站端可以自身情况来决定是使用Id还是url
如果要定期发送处于上架状态的商品，则数据量比较大。因此只定期发送失效的商品和失效后又变为有效的商品
